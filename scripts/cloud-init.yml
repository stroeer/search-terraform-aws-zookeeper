#cloud-config

package_update: true
package_upgrade: true

packages:
  - jq
  - java-11-amazon-corretto-headless
  - nc

mounts:
  - [ xvdb, /zookeeper/data, "xfs", "defaults,noatime", "0", "0" ]
  - [ xvdc, /zookeeper/logs, "xfs", "defaults,noatime", "0", "0" ]

write_files:
  - content: |
      #!/bin/bash

      touch /etc/sudoers.d/search-team
      chmod 440 /etc/sudoers.d/search-team

      declare -A USERKEY

      USERKEY[mgaber]="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC+MHNau/qsTcepWOsEFxsj+mgSHTCxE4h4c4IGPU36u Michael Gaber Michael.Gaber@stroeer.de Stroeer Digital Publishing GmbH"
      USERKEY[akunisch]="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAgHFJ/qJ4EnC9x4pa3reuHkYRxDhuAneK+15NhZeDfTVQHkBaT1hd4ermzpIycDR1Z5s1vNNcAA5bwxHjd2Rt5zVqchbnw9vzUxd9FfsW44MJYi95L2JkuQ60B7DuL4+pJtZqRuyhVRh9HlUhDDmEjKDEKH9pK1CLYkqWY49KJOZiA/6NLhSQO1qtkLJFd4yJf1k4TU7TtN0jbnyqtVPoOaUlkq49yAGIp6siG4ruTMZgRstsXJltnAl/jgfnbn9YOUr1HmeDQnCzHq2EsQwFE40sbtNe106+fwMuFhdL62zr5nf0xtPG8FPWrroAecGRTIoxAT3SHur2rtTd3q7oqw== Arne Kunisch arne.kunisch@stroeer.de Stroeer Digital Publishing GmbH"
      USERKEY[ascholz]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFTjykbHZO4NxR4ysBEnB+T1BG8YsJN1JHSyS2eqy2bUQ2EFJVge0Zn/1bVaWgGXULtSo6xgEQ3HwOkrKpVWP8LnsIJeceqUiCtld16w0RtyMDd9Qdf94q1CKBnrMzbIDL5sEH1ghtkVl2oG0eqBbhIG+jOrflH7uyGX6MGRAYm1MVdU3LcfE/ofjYgUJCUHES90rccwRyjKLFhbwsCFZik10YrECYytN+XtfS4f2EmJ/+z4E1BkdWLAqfuP/MhtqG95SqcF7rNxe9QDcnkyA2Ap4xaxaZ8ppTpAjt4xYlFGXIIhkJdwV1RgiDnUvoksF1I4jA2MKPYC+2PX/fmM39 Anne Scholz anne.scholz@esemos.de ESEMOS GmbH +49 34197693600"
      USERKEY[cstuemer]="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAjxZ6xzLqQgLHnJsapDz0IojUycTfA/hiZf+S8MzSfZlsIcj+k1KtfnQWgIx6rRZj2q3GeiVXRO4bzXUJ0CN552yLIQZtTixnQKE0UfEurqfb64wpEySS8FTrwXeraE0fhKorfsPKwptjQd5gW6JFTuEwYNNcxvjyON90bJZNMjl8EbklAvchs8d9gSmVx6M+XdrncZbAweCW0ZdQpQsL58p5CDMWBGqK0WOfROQKlcdEqyg+PG1cSUEHuDw/7VliqzDWOATTaCT6wiKIRrI/Dwi64+FRsSF7U6gBjJoozV8KB11HOj6Ls19XnA4HgPz+ajC5h3zcbmFSr5pigVR0bw== Chris Stuemer christ.stuemer@esemos.de ESEMOS GmbH"
      USERKEY[dklug]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZP6GbC7YhluH+ruHMTaKCkThDJJGXZuAPzqdsby8U5o/w3VMPxZ2EDN7X2mZKu7k6rxy0DbDurUXK6QnGunKakqf4Us0swv2reX33jhZx6ju5rYT9NO9BUcDLQiQs8QvhutXj3jhjMJwPPboWRQt+OxIMfJzY3MZdG7zwStGzdIruM+flc2tE1a9O1XPStfKbtTxLEXBiO7lp+u49QRb9wzf0z5o6SoGe3QGNjmf7HHQF5qEqj3rcbfBjyEAmvqjBd0XJCVpOjRf79naYr/X/VnCpAxdRBlIcrB76RCSw2z4BsJ6cg6V4AAL9WIg0V0dfVzUzD8gDfs8X8fpwDfF+Go1ZmM52xCYt3Fwg0lwmjlnOYR0P41rRZyNdUvGKm/KmPa1+pJ1zHReSQYhIFITsBXJxryWvfuGGlFWBTVa78QZbDxtDN6UmiviqUbNNj2xDehHsmAgtda0RIhPtw0jNtqERZl+O4HWrIm57OVmd9X5gzbRrwi+cwVFXQ3KAkcOKGdDcPTCFdVIHAStoe4gaawD6DCQbSq6m38cDcw767FnDBKy1zTLaQsOQB4pqbkmuA9DJNs6K0p3LpOJc4855pOk9eZzXwllmKqR7ATGjPDVUdpKlgnakb9gK7lPrqGnZYPcPfP3A3hQRjOPkBbixQOKi54iUGQ+r9HyG39dz+w== Daniel Klug daniel.klug@esemos.de ESEMOS GmbH"
      USERKEY[dszepes]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDHDi877yq3Tdc2d7ZJ03RN3m+X5x8+Ni29KPZY8ow2+RVy/n1IDo4M1zSZktB8wRuINQ7QZ0R3cfSLDeO5pi5TalSd4SklxSvAqt+pJCpxN350s0VSAM/NKESAt7YFGDjiaQxmlI0LGmB9U5uMkKTAQptGFOuK7kfX9dBf94JlJvxZkPrnx7mLvodpvapZO7if0cxnn+L0w9zA9+XD0haN/Qgl0lPLgvzumgnsM+JDoLFiGdtjla5BBv3bvfAZcTHAXRkPGsnnuicvpUJzbCM9SXZGRV9C+FAVyEODVJCnAcajizE/PReMg/17BdJ0et+9YwjSshAr8OJxnoGeQt25Ea3LLaT+c5m6zu6bWbAGeKIFB66pK6t4xRSHJDJBH8Q/uuRDEBJW8vFEMh2w8K5C3UexkNm8EFwi7k930hYiZKibt1A9GU50N7sadDfXpsYDDMRedU9/ZMHLEvZAZgduz8zlIzHysx8BEFplj/BlqRs4YCyx5ZQsnjGKhP6yQeL2ac1oOwB4f7tSEPDwPN5xnsMKZAXyY6Pptw7BLjHF/xsw7WuiqbceviNyghGb1dYTsRJarsKjWOVbG3c1rjZHF4UchzSoYS37+snwt+JZF+8zvjBxnv2Ztj7dGHuEJJ02YeTbkGbUZTqXAJ1ec89hTjC7M0wB+AMsOfRTrq4xnQ== Daniel Szepes Daniel.Szepes@esemos.de ESEMOS GmbH"
      USERKEY[khoebold]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDA5/VpfGedNKyJiLPFpxXnDoslJ8rAp98Jo6o/CCQWmBmNtrhjZZ64wGGWce23kZJyTW8ITNPaV3uNuY+CqWqGVmemy64Dtf9zbij2+0yqsOcHmSLpIdZOC0LZgxAib1OQSoseMp5DAniWN+K/E1tbldQK6/QD/WiQmVFtAP3WBSukYDebnrMyPpNOAO+qtEeojVkbBNFdf+ay3l70l6tISWX+jATAM7Tl57ei4/6gtsLVeq9aBz0nxnpNR5L8s7iARSExkM/2pxlz3ZG95aaCHrdheYhntC6IHUXtee85XEa6CZH0EuLBoMUblZslBQzSSlxNxDm343J7iF+P3jr5tmZwZByiLPFMu759Qr40O6lYafVKZlVtkiBhVeR/r3KhQZhFeuUK1gCOXYpsuNDtoCHL51lity4+G1gC9G5EZzvHhw4IvuNcS3QoeBd3bflTbMf+vLN/sfPSbajw3YlAyMIUlGcaBk7US98OtcG7Eup0KkTC/Dz6XlDg7ANBz5tbGcLy+ydDYSVIvRrU3bYAIsjefFdv0hYrKbS1L+gHlKTJHCo1vAs+YvAtWg2pRNhsB7l5zcQwMEgraajl50it5XMsKj6W/CSafM+EcfEq0KffoY5DzxOe6fxMYnOQukSHQTcPVY8p0UpjZ0aKIgQR0MiCKgWl4ErAuoOtQVgh5Q== Kai Hoebold kai.hoebold@esemos.de"
      USERKEY[ltischendorf]="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAke+GnVbjMKaG3bIvB+KsZq5Ikgqdven0c1xbXI6xXPRIAhlL8eYiBMW0JC/CY/U1kv+5CRO7nxy1fyGAyeNMz3XR8Ufzx8j1hfUle8wWix+Td3pI+aGDBtDLMCCKuRCsFmyxUU1SxMd9hU/lfJqkVDUTTg2/POG+cMGjWtIltTM= Lutz Tischendorf lutz.tischendorf@esemos.de Esemos GmbH"
      USERKEY[prieger]="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAjJUBKFpUU35O+uzzqA2UoK6XYLpOI9UcstPR+r5paechzRYfFbfxmykwMibwSySzzyx3l/JVRM07rD2cbdEdJQXjykWYvEqrzIcmT7TSfYsniA0HVof+qUkvpsfM0SRncrVp01wYK50YWR7XSTiG9GrwnnZf7dBmI+RDqC7BjFc= Peter Rieger peter.rieger@esemos.de Esemos GmbH +49 173 1918195"
      USERKEY[swindisch]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8OgKuqLt5quXy9UaJdD8SgGtnGQzTboejjRZlv9HCzqahb2v8G8A5oL8vUvxhnnNTagFCt6t3U8IYHFCQ0L3HroL9hG2fSPUSc2ZtZ/BZXA8OSY7T4/3F86fT4rLQylojzrk1JsfzhusrQTLxhkwAvmcb7UGzGQcIIpwhFccgClpj6oE/o5jPKtrhhYbW2AdGvchUbtFiEFphW1/iz/lga1CTg6/C+xpGrL01FRE3HrGYIXwqzmEOv7TV7c9pElEvn2WxLoTVJ2C9jL4Pe1lXDPtptJ/ctAUp6QiOT+hMtHfoj/476KHRJhzz9631T1G/kLdWPKioVS1uj21yX5aj  Sven Windisch sven.windisch@esemos.de Esemos GmbH +49 34203433014"
      USERKEY[dgoldhan]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDLHN/SWvoPeu5BM+AfrmdBkcfrF+4oVjsiUpAASji1MmYkXBm+h/+YeBYig0h0vid7IOPBGB73mPxvkkg8H4ItFVLVO3Vl4Z+Vh4S/9247ZOCdLiZZ480DUckc563qDZkzoMWUTpgDXNO9nC4f/Cy3MP8+OlwSp/rA+5IZ1fDp/ejfhrQEm6QokKy9Kek/6TxzjxrfTChHy1PlT0vZO0omZ+Cw2XJJsddqc3xBXDbEixduJ+32i0q1ZniXgpHsmiq2VSyJG94K66M99J1/YJ8rVAYwRk60nSpO1Bbgf5sGoegjtxY9MonDONT99lzwVduk4tUscrbyWT6cgp/eiEc5 Dirk Goldhan dirk.goldhan@quasiris.com Quasiris GmbH +49 177 2426266"
      USERKEY[tbaerwinkel]="ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApEVyAVr6HyGEucMpnZn+l+QiWdfG2LnED6Yjg46DjIWQ8vDASybQpxQUp6mYa7md4LsQk8G7Lcavsi5XU0sonDKkhEhv6GH4+qyo4v14sLOlTSEDN63Bn33Ug6zz/WaND8YL3wUrfGkM6oBcy38Vo2JeNxHNbFNfaaNTlPdn7fDXnC0y3UQt/nGspQL0lYKpHs+WcDu1uxsc6qgC9XPeJAm2cQ9q/PXgZ/Ze14lW58lUW14O06I9pJeq4gBIfQN85pLWfwCJCKrW2RkH1HgfQxF9XzYGNEmMfMFairANjsOb+28DzE8sqVq78cNNCRCTmiycWZf4yCT+rIR/hkSX8Q== Thomas Baerwinkel thomas.baerwinkel@quasiris.com Quasiris GmbH +49 172 3631388"
      USERKEY[jbajaryn]="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEwvgsWuf828PFS3P9zn7/u1TXpdyNuxNc43SRDLtCU4dVXUmDYCW+2dn4L9DDFsIhwl22xpcevhwEE8ahEoEtkTq5ZFxaZrjNfnjyVVARBjcDV1bHtQjQvMv/k0sNstYmeuVKd8u6svGgv/K4Sbf5PDo2DyjuAVh5mLnXysTSPo9wLXvU3pBudBPlD1LDhrs7aTnkDoUo5FTS6O1rbmOKIeDd7E4CM9RdTAtGltQ5rZ9cPOAjTn3M+G/cgKsUorFZwfMtjlf08c1JoZOUmS9cwnvl58+uWXhYWhZCoHGHaJX7rxnJ2kTjwu0wBXCPpMDh2Cg/TG601zXFRdowvvPN jbn@quasiris.de"

      for user in "$${!USERKEY[@]}" ; do

        adduser $user

        usermod -a -G adm $user

        echo "$user ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/search-team

        mkdir -p /home/$user/.ssh
        echo "$${USERKEY[$user]}" >> /home/$user/.ssh/authorized_keys

        chown -R $user:$user /home/$user/.ssh
        chmod -R go-rx /home/$user/.ssh
      done
    owner: root:root
    path: /run/create-users.sh
    permissions: 0700
  - content: |
      * * * * * root /usr/local/bin/instance_healthcheck.sh

    owner: root:root
    path: /etc/cron.d/healthcheck
    permissions: 0644
  - content: |
      #!/bin/bash
      INSTANCE_ID=`curl -s http://169.254.169.254/latest/meta-data/instance-id`
      REGION=`curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region`
      HEALTH=`echo ruok | nc localhost ${client_port}`
      if [[ $HEALTH == "imok" ]];
      then
        aws autoscaling set-instance-health --instance-id $INSTANCE_ID --health-status Healthy --region $REGION
      else
        aws autoscaling set-instance-health --instance-id $INSTANCE_ID --health-status Unhealthy --region $REGION
      fi

    owner: root:root
    path: /usr/local/bin/instance_healthcheck.sh
    permissions: 0700
  - content: |
      #!/bin/bash
      echo Creating zookeeper user and group

      adduser zookeeper -U -d /zookeeper -M
    path: /run/create_zk_user.sh
    permissions: 0700
  - content: |
      [Unit]
      Description=ZooKeeper Service
      Documentation=http://zookeeper.apache.org
      Requires=network.target
      After=network.target

      [Service]
      Type=forking
      User=zookeeper
      Group=zookeeper
      ExecStart=/zookeeper/bin/zkServer.sh start /zookeeper/conf/zoo.cfg
      ExecStop=/zookeeper/bin/zkServer.sh stop /zookeeper/conf/zoo.cfg
      ExecReload=/zookeeper/bin/zkServer.sh restart /zookeeper/conf/zoo.cfg
      WorkingDirectory=/zookeeper
      Environment=ZK_SERVER_HEAP=${zk_heap}

      [Install]
      WantedBy=default.target
    path: /run/zookeeper.service
    permissions: 0600
  - content: |
      tickTime=${tick_time}
      initLimit=${init_limit}
      syncLimit=${sync_limit}
      dataDir=/zookeeper/data
      dataLogDir=/zookeeper/logs
      clientPort=${client_port}
      4lw.commands.whitelist=mntr, stat, ruok, conf, isro
      maxClientCnxns=600
      %{ for node in nodes ~}
server.${node}=zk${node}.${domain}:2888:3888
      %{ endfor ~}

    path: /run/zoo.cfg
    permissions: 0600
  - content: |
      #!/bin/bash
      echo Configuring data and log volume storage

      mkfs.xfs /dev/xvdb
      mkfs.xfs /dev/xvdc

      mount -a

    path: /run/setup_volumes.sh
    permissions: 0700
  - content: |
      #!/bin/bash
      echo Installing Zookeeper v${version}
      wget -O /run/zk.tgz https://archive.apache.org/dist/zookeeper/zookeeper-${version}/apache-zookeeper-${version}-bin.tar.gz
      tar zxvf /run/zk.tgz --strip 1 -C /zookeeper
      echo ${index} > /zookeeper/data/myid
      cp /run/zoo.cfg /zookeeper/conf/zoo.cfg
      cp /run/zookeeper.service /usr/lib/systemd/system/zookeeper.service && chmod 0644 /usr/lib/systemd/system/zookeeper.service
      systemctl daemon-reload
      chkconfig zookeeper on

      chown -R zookeeper:zookeeper /zookeeper
    path: /run/install_zookeeper.sh
    permissions: 0700
  - content: |
      {
        "agent": {
          "metrics_collection_interval": 60,
          "run_as_user": "cwagent"
        },
        "logs": {
          "logs_collected": {
            "files": {
              "collect_list": [
                {
                  "file_path": "/zookeeper/logs/zookeeper-zookeeper*",
                  "log_group_name": "zookeeper.log",
                  "timestamp_format": "%Y-%m-%d %H:%M:%S,%f"
                }
              ]
            }
          }
        },
        "metrics": {
          "namespace": "${cloudwatch_namespace}",
          "append_dimensions": {
              "InstanceId": "$${aws:InstanceId}",
              "AutoScalingGroupName": "$${aws:AutoScalingGroupName}"
          },
          "metrics_collected": {
            "cpu": {
              "measurement": [
                "time_iowait",
                "time_user",
                "time_system",
                "time_active",
                "usage_system",
                "usage_user"
              ]
            },
            "disk": {
              "measurement": [
                "used_percent"
              ],
              "resources": [
                "/",
                "/zookeeper/data",
                "/zookeeper/logs"
              ]
            },
            "diskio": {
              "measurement": [
                "read_bytes",
                "write_bytes"
              ]
            },
            "mem": {
              "measurement": [
                "used_percent"
              ]
            },
            "net": {
              "measurement": [
                "bytes_sent",
                "bytes_recv"
              ]
            }
          }
        }
      }
    path: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
    permissions: 0755
  - content: |
      #!/bin/bash
      echo Installing CloudWatch agent
      wget -O /run/amazon-cloudwatch-agent.rpm https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
      rpm -Uvh /run/amazon-cloudwatch-agent.rpm
      chkconfig amazon-cloudwatch-agent on
      service amazon-cloudwatch-agent start
    path: /run/install_cloudwatch_agent.sh
    permissions: 0700

  - content: |
      #!/bin/bash
      needs-restarting -r
      if [ $$? -eq 1 ]; then
        reboot
      fi
    path: /run/reboot-required.sh
    permissions: 0700

runcmd:
  - yum update -y
  - /run/create-users.sh
  - /run/create_zk_user.sh
  - /run/setup_volumes.sh
  - /run/install_zookeeper.sh
  - /run/install_cloudwatch_agent.sh
  - service zookeeper start
  - /run/reboot-required.sh
  
